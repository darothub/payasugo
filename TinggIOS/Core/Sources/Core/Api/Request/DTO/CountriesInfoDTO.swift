//
//  CountriesInfoDTO.swift
//  
//
//  Created by Abdulrasaq on 15/06/2023.
//

import Foundation
// MARK: - Country
public struct CountriesInfoDTO: Codable {
    public var name: String? = ""
    public var countryCode: String? = ""
    public var countryURLNew: String? = ""
    public var status: String? = ""
    public var currency: String? = ""
    public var mulaClientID: String? = ""
    public var countryMobileRegex: String? = ""
    public var genericAccountNumberRegex: String? = ""
//    public var extractSMSOnProfiling = 0
    public var countryCurrencyRegex: String? = ""
//    public var excludedSMSSourceAddresses = RealmSwift.List<String>()
    public var countryDialCode: String? = ""
//    public var confirmedAccountLimits: String? = ""
    public var hotlineAppID: String? = ""
    public var hotlineAppKey: String? = ""
    public var freshchatAppID: String? = ""
    public var freshchatAppKey: String? = ""
    public var faqURL: String? = ""
    public var tacURL: String? = ""
    public var alphanumericRegexes: String? = ""
    public var minimumProfiledAccounts: String? = ""
    public var smsProfilingTimeout: String? = ""
    public var roundUpAmounts: String? = ""
    public var maximumCards: String? = ""
    public var countryFlag: String? = ""
    public var hasWallet: Int? = 0
    public var hasGroups: Int? = 0
    public var hasFloatingButton: Int? = 0
//    public var hasDiscover: Int = 0
    public var useSmileSDK: Int? = 0
    public var hasReferral: Int? = 0
//    public var isManualKycRegistration: Int = 0
    public var countrySourceAddresses: String? = ""
    public var isDefault: Bool? = false
    public var successCallBackURL: String? = ""
    public var payerClientCode: String? = ""
//    public var isSecureCardPayment: String? = ""
    public var failedCallBackURL: String? = ""
    public var webCheckoutURL: String? = ""
    public var clevertapAccountID: String? = ""
    public var clevertapToken: String? = ""
    public var showAssist: Int? = 0
    public var mulaAssistInterestType: String? = ""
    public var mulaAssistDurationType: String? = ""
    public var mulaAssistInterestRate: String? = ""
    public var mulaAssistDuration: String? = ""
    public var mulaAssistLoanTermDuration: String? = ""
    public var accessKey: String? = ""
    public var checkoutServiceCode: String? = ""
    public var webHookURL: String? = ""
    public var fetchBearerTokenURL: String? = ""
    public var privacyPolicyURL: String? = ""
    public var activeCountry: Bool = false
    public init(name: String? = nil, countryCode: String? = nil, countryURLNew: String? = nil, status: String? = nil, currency: String? = nil, mulaClientID: String? = nil, countryMobileRegex: String? = nil, genericAccountNumberRegex: String? = nil, countryCurrencyRegex: String? = nil, countryDialCode: String? = nil, hotlineAppID: String? = nil, hotlineAppKey: String? = nil, freshchatAppID: String? = nil, freshchatAppKey: String? = nil, faqURL: String? = nil, tacURL: String? = nil, alphanumericRegexes: String? = nil, minimumProfiledAccounts: String? = nil, smsProfilingTimeout: String? = nil, roundUpAmounts: String? = nil, maximumCards: String? = nil, countryFlag: String? = nil, hasWallet: Int? = nil, hasGroups: Int? = nil, hasFloatingButton: Int? = nil, useSmileSDK: Int? = nil, hasReferral: Int? = nil, countrySourceAddresses: String? = nil, isDefault: Bool? = nil, successCallBackURL: String? = nil, payerClientCode: String? = nil, failedCallBackURL: String? = nil, webCheckoutURL: String? = nil, clevertapAccountID: String? = nil, clevertapToken: String? = nil, showAssist: Int? = nil, mulaAssistInterestType: String? = nil, mulaAssistDurationType: String? = nil, mulaAssistInterestRate: String? = nil, mulaAssistDuration: String? = nil, mulaAssistLoanTermDuration: String? = nil, accessKey: String? = nil, checkoutServiceCode: String? = nil, webHookURL: String? = nil, fetchBearerTokenURL: String? = nil, privacyPolicyURL: String? = nil, activeCountry: Bool = false) {
        self.name = name
        self.countryCode = countryCode
        self.countryURLNew = countryURLNew
        self.status = status
        self.currency = currency
        self.mulaClientID = mulaClientID
        self.countryMobileRegex = countryMobileRegex
        self.genericAccountNumberRegex = genericAccountNumberRegex
        self.countryCurrencyRegex = countryCurrencyRegex
        self.countryDialCode = countryDialCode
        self.hotlineAppID = hotlineAppID
        self.hotlineAppKey = hotlineAppKey
        self.freshchatAppID = freshchatAppID
        self.freshchatAppKey = freshchatAppKey
        self.faqURL = faqURL
        self.tacURL = tacURL
        self.alphanumericRegexes = alphanumericRegexes
        self.minimumProfiledAccounts = minimumProfiledAccounts
        self.smsProfilingTimeout = smsProfilingTimeout
        self.roundUpAmounts = roundUpAmounts
        self.maximumCards = maximumCards
        self.countryFlag = countryFlag
        self.hasWallet = hasWallet
        self.hasGroups = hasGroups
        self.hasFloatingButton = hasFloatingButton
        self.useSmileSDK = useSmileSDK
        self.hasReferral = hasReferral
        self.countrySourceAddresses = countrySourceAddresses
        self.isDefault = isDefault
        self.successCallBackURL = successCallBackURL
        self.payerClientCode = payerClientCode
        self.failedCallBackURL = failedCallBackURL
        self.webCheckoutURL = webCheckoutURL
        self.clevertapAccountID = clevertapAccountID
        self.clevertapToken = clevertapToken
        self.showAssist = showAssist
        self.mulaAssistInterestType = mulaAssistInterestType
        self.mulaAssistDurationType = mulaAssistDurationType
        self.mulaAssistInterestRate = mulaAssistInterestRate
        self.mulaAssistDuration = mulaAssistDuration
        self.mulaAssistLoanTermDuration = mulaAssistLoanTermDuration
        self.accessKey = accessKey
        self.checkoutServiceCode = checkoutServiceCode
        self.webHookURL = webHookURL
        self.fetchBearerTokenURL = fetchBearerTokenURL
        self.privacyPolicyURL = privacyPolicyURL
        self.activeCountry = activeCountry
    }
    enum CodingKeys: String, CodingKey {
        case name = "COUNTRY"
        case countryCode = "COUNTRY_CODE"
        case countryURLNew = "COUNTRY_URL"
        case status = "STATUS"
        case currency = "CURRENCY"
        case mulaClientID = "MULA_CLIENT_ID"
        case countryMobileRegex = "COUNTRY_MOBILE_REGEX"
        case genericAccountNumberRegex = "GENERIC_ACCOUNT_NUMBER_REGEX"
//        case extractSMSOnProfiling = "EXTRACT_SMS_ON_PROFILING"
        case countryCurrencyRegex = "COUNTRY_CURRENCY_REGEX"
//        case excludedSMSSourceAddresses = "EXCLUDED_SMS_SOURCE_ADDRESSES"
        case countryDialCode = "COUNTRY_DIAL_CODE"
//        case confirmedAccountLimits = "CONFIRMED_ACCOUNT_LIMITS"
        case hotlineAppID = "HOTLINE_APP_ID"
        case hotlineAppKey = "HOTLINE_APP_KEY"
        case freshchatAppID = "FRESHCHAT_APP_ID"
        case freshchatAppKey = "FRESHCHAT_APP_KEY"
        case faqURL = "FAQ_URL"
        case tacURL = "TAC_URL"
        case alphanumericRegexes = "ALPHANUMERIC_REGEXES"
        case minimumProfiledAccounts = "MINIMUM_PROFILED_ACCOUNTS"
        case smsProfilingTimeout = "SMS_PROFILING_TIMEOUT"
        case roundUpAmounts = "ROUND_UP_AMOUNTS"
        case maximumCards = "MAXIMUM_CARDS"
        case countryFlag = "COUNTRY_FLAG"
        case hasWallet = "HAS_WALLET"
        case hasGroups = "HAS_GROUPS"
        case hasFloatingButton = "HAS_FLOATING_BUTTON"
//        case hasDiscover = "HAS_DISCOVER"
        case useSmileSDK = "USE_SMILE_SDK"
        case hasReferral = "HAS_REFERRAL"
//        case isManualKycRegistration = "IS_MANUAL_KYC_REGISTRATION"
        case countrySourceAddresses = "COUNTRY_SOURCE_ADDRESSES"
        case isDefault = "IS_DEFAULT"
        case successCallBackURL = "SUCCESS_CALL_BACK_URL"
        case payerClientCode = "PAYER_CLIENT_CODE"
//        case isSecureCardPayment = "IS_SECURE_CARD_PAYMENT"
        case failedCallBackURL = "FAILED_CALL_BACK_URL"
        case webCheckoutURL = "WEB_CHECKOUT_URL"
        case clevertapAccountID = "CLEVERTAP_ACCOUNT_ID"
        case clevertapToken = "CLEVERTAP_TOKEN"
        case showAssist = "SHOW_ASSIST"
        case mulaAssistInterestType = "MULA_ASSIST_INTEREST_TYPE"
        case mulaAssistDurationType = "MULA_ASSIST_DURATION_TYPE"
        case mulaAssistInterestRate = "MULA_ASSIST_INTEREST_RATE"
        case mulaAssistDuration = "MULA_ASSIST_DURATION"
        case mulaAssistLoanTermDuration = "MULA_ASSIST_LOAN_TERM_DURATION"
        case accessKey = "ACCESS_KEY"
        case checkoutServiceCode = "CHECKOUT_SERVICE_CODE"
        case webHookURL = "WEB_HOOK_URL"
        case fetchBearerTokenURL = "FETCH_BEARER_TOKEN_URL"
        case privacyPolicyURL = "PRIVACY_POLICY_URL"
    }
    public func convertToCountriesInfo() -> CountryInfo {
        let countriesInfo = CountryInfo()
        countriesInfo.name  = self.name
        countriesInfo.countryCode  = self.countryCode
        countriesInfo.countryURLNew  = self.countryURLNew
        countriesInfo.status  = self.status
        countriesInfo.currency  = self.currency
        countriesInfo.mulaClientID  = self.mulaClientID
        countriesInfo.countryMobileRegex  = self.countryMobileRegex
        countriesInfo.genericAccountNumberRegex  = self.genericAccountNumberRegex
    //     countriesInfo.extractSMSOnProfiling = self.extractSMSOnProfiling
        countriesInfo.countryCurrencyRegex  = self.countryCurrencyRegex
    //     countriesInfo.excludedSMSSourceAddresses = self.excludedSMSSourceAddresses
        countriesInfo.countryDialCode  = self.countryDialCode
    //     countriesInfo.confirmedAccountLimits  = self.confirmedAccountLimits
        countriesInfo.hotlineAppID  = self.hotlineAppID
        countriesInfo.hotlineAppKey  = self.hotlineAppKey
        countriesInfo.freshchatAppID  = self.freshchatAppID
        countriesInfo.freshchatAppKey  = self.freshchatAppKey
        countriesInfo.faqURL  = self.faqURL
        countriesInfo.tacURL  = self.tacURL
        countriesInfo.alphanumericRegexes  = self.alphanumericRegexes
        countriesInfo.minimumProfiledAccounts  = self.minimumProfiledAccounts
        countriesInfo.smsProfilingTimeout  = self.smsProfilingTimeout
        countriesInfo.roundUpAmounts  = self.roundUpAmounts
        countriesInfo.maximumCards  = self.maximumCards
        countriesInfo.countryFlag  = self.countryFlag
        countriesInfo.hasWallet  = self.hasWallet
        countriesInfo.hasGroups  = self.hasGroups
        countriesInfo.hasFloatingButton  = self.hasFloatingButton
    //     countriesInfo.hasDiscover = self.hasDiscover
        countriesInfo.useSmileSDK  = self.useSmileSDK
        countriesInfo.hasReferral  = self.hasReferral
    //     countriesInfo.isManualKycRegistration = self.isManualKycRegistration
        countriesInfo.countrySourceAddresses  = self.countrySourceAddresses
        countriesInfo.isDefault  = self.isDefault
        countriesInfo.successCallBackURL  = self.successCallBackURL
        countriesInfo.payerClientCode  = self.payerClientCode
    //     countriesInfo.isSecureCardPayment  = self.isSecureCardPayment
        countriesInfo.failedCallBackURL  = self.failedCallBackURL
        countriesInfo.webCheckoutURL  = self.webCheckoutURL
        countriesInfo.clevertapAccountID  = self.clevertapAccountID
        countriesInfo.clevertapToken  = self.clevertapToken
        countriesInfo.showAssist  = self.showAssist
        countriesInfo.mulaAssistInterestType  = self.mulaAssistInterestType
        countriesInfo.mulaAssistDurationType  = self.mulaAssistDurationType
        countriesInfo.mulaAssistInterestRate  = self.mulaAssistInterestRate
        countriesInfo.mulaAssistDuration  = self.mulaAssistDuration
        countriesInfo.mulaAssistLoanTermDuration  = self.mulaAssistLoanTermDuration
        countriesInfo.accessKey  = self.accessKey
        countriesInfo.checkoutServiceCode  = self.checkoutServiceCode
        countriesInfo.webHookURL  = self.webHookURL
        countriesInfo.fetchBearerTokenURL  = self.fetchBearerTokenURL
        countriesInfo.privacyPolicyURL  = self.privacyPolicyURL
        countriesInfo.activeCountry =  self.activeCountry
        return countriesInfo
    }
}
